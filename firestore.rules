rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper function to check if user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }
    
    // Helper function to check if user has an active subscription
    function hasActiveSubscription() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.hasActiveSubscription == true;
    }
    
    // Helper function to check if user is accessing their own data
    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    // Users collection rules
    match /users/{userId} {
      // Allow read/write during registration and subscription process
      allow create: if isAuthenticated() && isOwner(userId);
      allow read: if isAuthenticated() && isOwner(userId);
      allow update: if isAuthenticated() && isOwner(userId);
      
      // Other collections require active subscription
      match /{document=**} {
        allow read, write: if isAuthenticated() && 
          isOwner(userId) && 
          (hasActiveSubscription() || resource == null);
      }
    }
  }
} 